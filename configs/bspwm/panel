#! /bin/sh

source $(dirname $0)/config
    
if xdo id -a "$WM_NAME" > /dev/null ; then
    printf "%s\n" "The panel is already running." >&2
    exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $HEIGHT
bspc subscribe |\
    grep -oE "[Mm][^TM]*[TML]" --line-buffered |\
    while read line; do echo W$line; done > "$PANEL_FIFO" &

PADDING=" "
SEPERATOR=" | "

# Top left
{
    getName() {
        local icon=$(pIcon ${GREEN} ${ARCH})
        local cmd="$(uname -n)"
	local clr=$(pText ${GREEN} "${cmd^^}")
        echo " ${icon}$PADDING${clr}"
    }

    panelMusic() {
        local prev=$(pAction $FG $BG "mpc prev &>/dev/null" ${CPREV})
        local pause=$(pAction $FG $BG "mpc pause &>/dev/null" ${CPAUS})
        local play=$(pAction $FG $BG "mpc play &>/dev/null" ${CPLAY})
        local next=$(pAction $FG $BG "mpc next &>/dev/null" ${CNEXT})
        echo "${prev}${pause}${play}${next}"
    }

    music() {
        local icon=$(pIcon ${BLUE} ${CSOUND})
        local stat="$(mpc status | grep \# | awk '{print $1}')"
        local artist=$(mpc -f %artist% current)
        local musicname=$(mpc -f %title% current)
        local cmd=""
        if [ "${stat}" ] && [ "${stat}" = "[playing]" ] ; then
            cmd=" Playing >> ${artist:0:10} - ${musicname:0:15}"
        elif [ "${stat}" ] && [ "${stat}" = "[paused]" ] ; then
            cmd=" Paused >> ${artist:0:10} - ${musicname:0:15}"
        else
            cmd="No Sound"
        fi
        
        echo "${icon}$(pText ${BLUE} "${cmd^^}")"
    }

    volume() {
        local icon=$(pIcon ${MAGENTA} ${CVOLUME})
        local volume="$(mpc volume | awk '{print $2}')"
        [[ -z ${volume%?} ]] && volume='100%'
        local clr=$(pText ${MAGENTA2} "${volume}")
        local plus=$(pAction $FG $BG "mpc volume +4 &>/dev/null" ${VPLUS})
        local minus=$(pAction $FG $BG "mpc volume -3 &>/dev/null" ${VMINUS})

        echo "${icon} ${clr} ${plus}${minus}"
    }

    while :; do
        echo "T$(getName) $(panelMusic) $(music) $(volume)"
        sleep 5
    done

} > "$PANEL_FIFO" &

# Top Right
{
    getDay() {
        local icon=$(pIcon ${WHITE} ${CTIME})
        local cmd=" $(date '+%A %d %b')" 
     	local clr=$(pText ${WHITE2} "${cmd^^}")
	echo "${icon}${clr}$PADDING"
    }

    clock() {
        local icon=$(pIcon ${GREEN} ${CCLOCK})
        local cmd=$(date +%H:%M)
        local clr=$(pText ${GREEN2} "${cmd^^}")
        echo "${icon} ${clr}"
    }

    net() {
        local _GETIWL=$(/sbin/iwgetid -r)
        local _GETETH=$(ip a | grep "state UP" | awk '{ORS=""}{print $2}' | cut -d ':' -f 1)
        local _status=${_GETIWL:-$_GETETH}
        local _status2="${_status:-Down}"
        local icon="$(pIcon ${MAGENTA} ${CNET})"
        local cmd=$(pText ${MAGENTA2} " ${_status2^^}")

        echo "${icon}${cmd}"
    } 

    ram() {
        local icon=$(pIcon ${BLUE} ${CRAM})
        local cmd=$(free -m | grep Mem | awk '{print $3}')
        cmd+=" Mb"
        local clr=$(pText ${BLUE2} "${cmd^^}")
        echo "${icon} ${clr}"
    }

    # Cpu List Load, number of Process and actual MHz frequency.
    cpu() {
        local icon=$(pIcon ${YELLOW2} ${CCPU})
        local cmd=" $(cat /proc/loadavg | awk '{print $1}')"
        local cmd+=" $(cat /proc/loadavg | awk '{print $4}')"
        local cmd+=" $(cat /proc/cpuinfo| grep MHz | awk '{ORS=" "}{print $4}' | sed -e 's/.000//g' | cut -f 1)"

        local clr=$(pText ${YELLOW} "${cmd^^}")
        echo "${icon}${clr}"
    }

    # On archlinux, change cmd=$(pacman -Ql | wc -l), or remove it completely.
    package() {
        local icon=$(pIcon ${MAGENTA2} ${CPACK})
        local cmd=$(pacman -Ql | wc -l)
        local clr=$(pText ${MAGENTA} "${cmd^^}")
        echo "${icon} ${clr}"
    }

    while :; do
	echo "S$(package) $(cpu) $(ram) $(net) $(clock) $(getDay)"
	sleep 5
    done

} > "$PANEL_FIFO" &

$(dirname $0)/panel_bar < "$PANEL_FIFO" | lemonbar \
    -d \
    -a 32 \
    -n "$WM_NAME" \
    -g x$HEIGHT \
    -u 2 \
    -f "$FONT" \
    -f "$FONT_ICON" \
    -F "$FG" \
    -B "$BG" | sh | while read line; do eval "$line"; done &

wid=$(xdo id -a "$WM_NAME")
tries_left=20

while [ -z "$wid" -a "$tries_left" -gt 0 ] ; do
	sleep 0.05
	wid=$(xdo id -a "$WM_NAME")
	tries_left=$((tries_left - 1))
done

[ -n "$wid" ] && xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

wait
